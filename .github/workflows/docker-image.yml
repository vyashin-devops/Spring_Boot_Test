#------------------------------------------------------------------------------------------------------------------
# GitHub Action Workflow to build and push Docker SpringBoot Application to Docker Hub and run container on EC2 Instance  
#
# Version      Date        Info
# 1.0          2021        Initial Version
#
# Made by Vyacheslav Yashin Copyleft (c)  2021 
#-------------------------------------------------------------------------------------------------------------------

name:  Docker main Java CI with Maven

on:
  push:
    branches: [ _main ]
  pull_request:
    branches: [ _main ]
 
jobs:
  Build_and_push_to_Docker:
    runs-on: ubuntu-latest
    steps:
    
      - name: Check Out Repo 
        uses: actions/checkout@v2
      - name: Install Java
        run:  sudo apt install default-jre
      - name: Install Maven
        run:  sudo apt install maven
      - name: Clean MVN Pcakage
        run:  mvn clean package
      - name: Java Version
        run:  java --version
      - name: Maven Version
        run:  mvn --version
      - name: Echo "Build is Success Message"
        run:  echo "Build is Success!"
      

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USER }}/springtestdocker:latest

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}


  Remote_ssh_commands:
    runs-on: ubuntu-latest
    needs: [Build_and_push_to_Docker]
    steps:
    
      - name: First executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        continue-on-error: true
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
#         port: ${{ secrets.PORT }}
          script: docker rm -f $(docker ps -a -q) && docker rmi $(docker images -q)
          #      ^ docker kill $(docker ps -q) && 
        
      - name: Second executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        #continue-on-error: true
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
#         port: ${{ secrets.PORT }}
          script: docker run --name springtestdocker -d -p 80:80 yashinv/springtestdocker
